// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Social.Database;

namespace Social.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200808083006_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.JIS_SEQUENCE", "'JIS_SEQUENCE', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_ACCESS_ROLE_ID", "'S_NEW_ACCESS_ROLE_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_ACCESS_USER_ID", "'S_NEW_ACCESS_USER_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_ACCOUNT_ID", "'S_NEW_ACCOUNT_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_ADDRESS_POSTCODE_ID", "'S_NEW_ADDRESS_POSTCODE_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_CATEGORY_DOC_ID", "'S_NEW_CATEGORY_DOC_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_JINTERDEP_NUM", "'S_NEW_JINTERDEP_NUM', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_JIRS", "'S_NEW_JIRS', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_NAVIGATOR_ID", "'S_NEW_NAVIGATOR_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_NUM", "'S_NEW_NUM', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_PERSON_ID", "'S_NEW_PERSON_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_PERSONS_DOC_ID", "'S_NEW_PERSONS_DOC_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_PERSONS_HISTORYS_ID", "'S_NEW_PERSONS_HISTORYS_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_ROLE_OBJECTS_ID", "'S_NEW_ROLE_OBJECTS_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_SERVISES_DOC_ID", "'S_NEW_SERVISES_DOC_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_SERVISES_HISTORYS_ID", "'S_NEW_SERVISES_HISTORYS_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_SERVISES_ID", "'S_NEW_SERVISES_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_SERVISES_NUM", "'S_NEW_SERVISES_NUM', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_SERVISES_REST_NUM", "'S_NEW_SERVISES_REST_NUM', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_SHO_ID", "'S_NEW_SHO_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_USER_ID", "'S_NEW_USER_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.S_NEW_ZAGS_DATA_ID", "'S_NEW_ZAGS_DATA_ID', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.UID_SEQUENCE", "'UID_SEQUENCE', '', '1', '1', '', '', 'Int64', 'False'");

            modelBuilder.Entity("Shop.Domain.Models.EventSocialSession", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal>("Event")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EVENT")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.Property<decimal>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1 ");

                    b.Property<string>("Note")
                        .HasColumnName("NOTE")
                        .HasColumnType("VARCHAR2(1000)");

                    b.Property<decimal>("SessionId")
                        .HasColumnName("SESSION_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_EVENT_SOC_SESSION_ID");

                    b.HasIndex("SessionId");

                    b.ToTable("EVENT_SOCIAL_SESSION");
                });

            modelBuilder.Entity("Shop.Domain.Models.JournalInterdepartServSocia", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateFinished")
                        .HasColumnName("DATE_FINISHED")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<int?>("FlagFms")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FLAG_FMS")
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("IdJiRest")
                        .HasColumnName("ID_JI_REST")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("IdService")
                        .HasColumnName("ID_SERVICE")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1 ");

                    b.Property<int?>("InterdepartStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INTERDEPART_STATUS")
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("PersonBplace")
                        .HasColumnName("PERSON_BPLACE")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<DateTime?>("PersonDr")
                        .HasColumnName("PERSON_DR")
                        .HasColumnType("DATE");

                    b.Property<string>("PersonFm")
                        .HasColumnName("PERSON_FM")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<string>("PersonIm")
                        .HasColumnName("PERSON_IM")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<string>("PersonOt")
                        .HasColumnName("PERSON_OT")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_JI_SERVICE_SOC_ID");

                    b.HasIndex("IdJiRest");

                    b.HasIndex("IdService");

                    b.ToTable("JOURNAL_INTERDEPART_SERV_SOCIA");
                });

            modelBuilder.Entity("Shop.Domain.Models.JournalInterdepartSocial", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_CREATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime?>("DateFinished")
                        .HasColumnName("DATE_FINISHED")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1 ");

                    b.Property<decimal?>("JournalNumber")
                        .HasColumnName("JOURNAL_NUMBER")
                        .HasColumnType("NUMBER");

                    b.Property<int>("JournalStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOURNAL_STATUS")
                        .HasColumnType("NUMBER(2)")
                        .HasDefaultValueSql("0 ");

                    b.Property<DateTime?>("MaxDocDate")
                        .HasColumnName("MAX_DOC_DATE")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("MinDocDate")
                        .HasColumnName("MIN_DOC_DATE")
                        .HasColumnType("DATE");

                    b.Property<decimal?>("ServiesCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SERVIES_COUNT")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql(@"0
");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_JL_INTERDEPART_SOC_ID");

                    b.HasIndex("JournalNumber")
                        .IsUnique()
                        .HasName("UK_JL_INTERDEPART_SOC_NUM");

                    b.ToTable("JOURNAL_INTERDEPART_SOCIAL");
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocial", b =>
                {
                    b.Property<decimal>("PersonId")
                        .HasColumnName("PERSON_ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("Adate")
                        .HasColumnName("ADATE")
                        .HasColumnType("DATE");

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("VARCHAR2(1000)");

                    b.Property<decimal?>("AddressId")
                        .HasColumnName("ADDRESS_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Anum")
                        .HasColumnName("ANUM")
                        .HasColumnType("VARCHAR2(15)");

                    b.Property<string>("Apartment")
                        .HasColumnName("APARTMENT")
                        .HasColumnType("VARCHAR2(10)");

                    b.Property<DateTime?>("Bdate")
                        .HasColumnName("BDATE")
                        .HasColumnType("DATE");

                    b.Property<string>("Birthplace")
                        .HasColumnName("BIRTHPLACE")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<decimal>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COUNTRY_ID")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("167 ");

                    b.Property<DateTime?>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime?>("Ddate")
                        .HasColumnName("DDATE")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IsLegalRepresent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IS_LEGAL_REPRESENT")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.Property<decimal?>("IsRepresent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IS_REPRESENT")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<string>("Patronymic")
                        .HasColumnName("PATRONYMIC")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<string>("PhoneHome")
                        .HasColumnName("PHONE_HOME")
                        .HasColumnType("VARCHAR2(30)");

                    b.Property<string>("PhoneMobile")
                        .HasColumnName("PHONE_MOBILE")
                        .HasColumnType("VARCHAR2(30)");

                    b.Property<string>("PhoneWork")
                        .HasColumnName("PHONE_WORK")
                        .HasColumnType("VARCHAR2(30)");

                    b.Property<decimal?>("PostId")
                        .HasColumnName("POST_ID")
                        .HasColumnType("NUMBER");

                    b.Property<int?>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SEX")
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Snils")
                        .HasColumnName("SNILS")
                        .HasColumnType("VARCHAR2(14)");

                    b.Property<string>("Surname")
                        .HasColumnName("SURNAME")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.Property<decimal?>("WorkId")
                        .HasColumnName("WORK_ID")
                        .HasColumnType("NUMBER");

                    b.HasKey("PersonId")
                        .HasName("PK_PERSON_SOC_ID");

                    b.HasIndex("PersonId", "Snils", "Sex")
                        .HasName("I_PERSON_REST2_TEMP");

                    b.HasIndex("Bdate", "Surname", "Name", "Patronymic")
                        .HasName("I_PERSON_REST2_BDATE_FIO");

                    b.ToTable("PERSONS_SOCIAL");
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialDoc", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("Bdate")
                        .HasColumnName("BDATE")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("DateIn")
                        .HasColumnName("DATE_IN")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime?>("DateOut")
                        .HasColumnName("DATE_OUT")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<string>("Get")
                        .HasColumnName("GET")
                        .HasColumnType("VARCHAR2(1000)");

                    b.Property<DateTime?>("GetDate")
                        .HasColumnName("GET_DATE")
                        .HasColumnType("DATE");

                    b.Property<string>("Guid")
                        .HasColumnName("GUID")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Num")
                        .HasColumnName("NUM")
                        .HasColumnType("VARCHAR2(30)");

                    b.Property<decimal>("NumSheet")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NUM_SHEET")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1 ");

                    b.Property<decimal?>("PersonId")
                        .HasColumnName("PERSON_ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Ser")
                        .HasColumnName("SER")
                        .HasColumnType("VARCHAR2(30)");

                    b.Property<decimal?>("TypeDocId")
                        .HasColumnName("TYPE_DOC_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.Property<decimal>("VersionDoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION_DOC")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_PERSONS_SOC_DOC_ID");

                    b.HasIndex("PersonId")
                        .HasName("I_PERSON_REST2_DOC_PERS_ID");

                    b.HasIndex("TypeDocId")
                        .HasName("I_PERSON_REST2_DOC_TYPE_DOC_ID");

                    b.HasIndex("PersonId", "TypeDocId", "DateInsert")
                        .HasName("I_PERSON_REST2_DOC_TEMP");

                    b.ToTable("PERSONS_SOCIAL_DOC");
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialDocFile", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateFileCreate")
                        .HasColumnName("DATE_FILE_CREATE")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<string>("Extension")
                        .HasColumnName("EXTENSION")
                        .HasColumnType("VARCHAR2(256)");

                    b.Property<byte[]>("FileBody")
                        .HasColumnName("FILE_BODY")
                        .HasColumnType("BLOB");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("FILE_NAME")
                        .HasColumnType("VARCHAR2(256)");

                    b.Property<decimal?>("FileSize")
                        .HasColumnName("FILE_SIZE")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Guid")
                        .HasColumnName("GUID")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<decimal?>("IdPersonsDoc")
                        .HasColumnName("ID_PERSONS_DOC")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Note")
                        .HasColumnName("NOTE")
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_PERSONS_SOC_DOC_FILE_ID");

                    b.HasIndex("IdPersonsDoc");

                    b.ToTable("PERSONS_SOCIAL_DOC_FILE");
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialLegalRepresent", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal>("IdLegalRepresent")
                        .HasColumnName("ID_LEGAL_REPRESENT")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("IdPerson")
                        .HasColumnName("ID_PERSON")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_PERSON_SOC_LEGAL_REPRESENT");

                    b.HasIndex("IdLegalRepresent");

                    b.HasIndex("IdPerson");

                    b.ToTable("PERSONS_SOCIAL_LEGAL_REPRESENT");
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialRepresent", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal>("IdPerson")
                        .HasColumnName("ID_PERSON")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("IdRepresent")
                        .HasColumnName("ID_REPRESENT")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_PERSON_SOC_REPRESENT");

                    b.HasIndex("IdPerson");

                    b.HasIndex("IdRepresent");

                    b.ToTable("PERSONS_SOCIAL_REPRESENT");
                });

            modelBuilder.Entity("Shop.Domain.Models.School", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("AbbName")
                        .HasColumnName("ABB_NAME")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1 ");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("SCHOOL_PK");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("SCHOOL_UK");

                    b.ToTable("SCHOOL");
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocial", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CATEGORY_ID")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("3");

                    b.Property<string>("Class")
                        .HasColumnName("CLASS")
                        .HasColumnType("VARCHAR2(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime?>("DateReg")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_REG")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<int?>("Delivery")
                        .HasColumnName("DELIVERY")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DocNum")
                        .HasColumnName("DOC_NUM")
                        .HasColumnType("VARCHAR2(20)");

                    b.Property<decimal?>("IdContrUpdate")
                        .HasColumnName("ID_CONTR_UPDATE")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdCurrLegalRepresent")
                        .HasColumnName("ID_CURR_LEGAL_REPRESENT")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdCurrRepresent")
                        .HasColumnName("ID_CURR_REPRESENT")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdOperInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_OPER_INSERT")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("1");

                    b.Property<decimal?>("IdServiceHistorys")
                        .HasColumnName("ID_SERVICE_HISTORYS")
                        .HasColumnType("NUMBER");

                    b.Property<string>("InfoBrowser")
                        .HasColumnName("INFO_BROWSER")
                        .HasColumnType("VARCHAR2(250)");

                    b.Property<string>("InfoIpAdress")
                        .HasColumnName("INFO_IP_ADRESS")
                        .HasColumnType("VARCHAR2(20)");

                    b.Property<decimal?>("PersonId")
                        .HasColumnName("PERSON_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Reserve")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RESERVE")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.Property<string>("RoomCoupon")
                        .HasColumnName("ROOM_COUPON")
                        .HasColumnType("VARCHAR2(20)");

                    b.Property<decimal?>("SchoolId")
                        .HasColumnName("SCHOOL_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("SessionId")
                        .HasColumnName("SESSION_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SERVISES_INV_ID");

                    b.HasIndex("IdCurrLegalRepresent");

                    b.HasIndex("IdCurrRepresent");

                    b.HasIndex("IdServiceHistorys");

                    b.HasIndex("PersonId");

                    b.HasIndex("SessionId");

                    b.ToTable("SERVISES_SOCIAL");
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialDoc", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateFileCreate")
                        .HasColumnName("DATE_FILE_CREATE")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<string>("Extension")
                        .HasColumnName("EXTENSION")
                        .HasColumnType("VARCHAR2(5)");

                    b.Property<byte[]>("FileBody")
                        .HasColumnName("FILE_BODY")
                        .HasColumnType("BLOB");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("FILE_NAME")
                        .HasColumnType("VARCHAR2(256)");

                    b.Property<decimal?>("FileSize")
                        .HasColumnName("FILE_SIZE")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Note")
                        .HasColumnName("NOTE")
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<decimal>("NumSheet")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NUM_SHEET")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.Property<decimal>("ServisesId")
                        .HasColumnName("SERVISES_ID")
                        .HasColumnType("NUMBER");

                    b.Property<int?>("TypeServiceDoc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TYPE_SERVICE_DOC")
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("0 ");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SERVISES_INV_DOC_ID");

                    b.HasIndex("ServisesId");

                    b.ToTable("SERVISES_SOCIAL_DOC");
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialFamilyCat", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("CategoryFamilyId")
                        .HasColumnName("CATEGORY_FAMILY_ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateAttribute")
                        .HasColumnName("DATE_ATTRIBUTE")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<string>("NumAttribute")
                        .HasColumnName("NUM_ATTRIBUTE")
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<decimal>("ServisesSocialId")
                        .HasColumnName("SERVISES_SOCIAL_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SERVIS_SOC_FAMILY_CAT_ID");

                    b.HasIndex("ServisesSocialId");

                    b.ToTable("SERVISES_SOCIAL_FAMILY_CAT");
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialHistorys", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("HistoryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HISTORY_DATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<string>("HistoryText")
                        .HasColumnName("HISTORY_TEXT")
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<decimal?>("IdStatus")
                        .HasColumnName("ID_STATUS")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdTypeFailure")
                        .HasColumnName("ID_TYPE_FAILURE")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("ServisesId")
                        .HasColumnName("SERVISES_ID")
                        .HasColumnType("NUMBER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SERV_SOC_HIST_ID");

                    b.HasIndex("ServisesId");

                    b.ToTable("SERVISES_SOCIAL_HISTORYS");
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialPersonDoc", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate ");

                    b.Property<decimal?>("IdTypeDoc")
                        .HasColumnName("ID_TYPE_DOC")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("PersonsDocId")
                        .HasColumnName("PERSONS_DOC_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("ServisesId")
                        .HasColumnName("SERVISES_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0 ");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SERV_SOC_PERSON_DOC_ID");

                    b.HasIndex("ServisesId");

                    b.ToTable("SERVISES_SOCIAL_PERSON_DOC");
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialDelivery", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<int?>("Method")
                        .HasColumnName("METHOD")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal?>("SocialSessionId")
                        .HasColumnName("SOCIAL_SESSION_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SOC_DELIVERY_ID");

                    b.HasIndex("SocialSessionId");

                    b.ToTable("SOCIAL_DELIVERY");
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialPeriod", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime?>("GetDocBegin")
                        .HasColumnName("GET_DOC_BEGIN")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("GetDocEnd")
                        .HasColumnName("GET_DOC_END")
                        .HasColumnType("DATE");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<int?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IS_ACTIVE")
                        .HasColumnType("NUMBER(10)")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<DateTime?>("PeriodBegin")
                        .HasColumnName("PERIOD_BEGIN")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnName("PERIOD_END")
                        .HasColumnType("DATE");

                    b.Property<decimal?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SOC_PERIOD_ID");

                    b.ToTable("SOCIAL_PERIOD");
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialPlace", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Comments")
                        .HasColumnName("COMMENTS")
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<DateTime?>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<decimal>("SocialWayId")
                        .HasColumnName("SOCIAL_WAY_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SOC_PLACE_ID");

                    b.HasIndex("SocialWayId");

                    b.ToTable("SOCIAL_PLACE");
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialSession", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Comments")
                        .HasColumnName("COMMENTS")
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<decimal?>("Count")
                        .HasColumnName("COUNT")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnName("DATE_BEGIN")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnName("DATE_END")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<decimal?>("IdEventSession")
                        .HasColumnName("ID_EVENT_SESSION")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("NumSession")
                        .HasColumnName("NUM_SESSION")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("SocialPlaceId")
                        .HasColumnName("SOCIAL_PLACE_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SOC_SESSION_ID");

                    b.HasIndex("IdEventSession");

                    b.HasIndex("SocialPlaceId");

                    b.ToTable("SOCIAL_SESSION");
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialWay", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("NUMBER");

                    b.Property<DateTime?>("DateInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_INSERT")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DATE_UPDATE")
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("sysdate");

                    b.Property<decimal?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasColumnType("VARCHAR2(200)");

                    b.Property<int?>("SignTerritory")
                        .HasColumnName("SIGN_TERRITORY")
                        .HasColumnType("NUMBER(10)");

                    b.Property<decimal>("SocialPeriodId")
                        .HasColumnName("SOCIAL_PERIOD_ID")
                        .HasColumnType("NUMBER");

                    b.Property<decimal?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VERSION")
                        .HasColumnType("NUMBER")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("PK_SOC_WAY_ID");

                    b.HasIndex("SocialPeriodId");

                    b.ToTable("SOCIAL_WAY");
                });

            modelBuilder.Entity("Shop.Domain.Models.TypeDoc", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("CorporateCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal>("HasChild")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal>("IdUser")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal?>("Ord")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<decimal?>("Parent")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("TypeDocName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TypeDocNameRest")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal>("Version")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("TypeDocs");
                });

            modelBuilder.Entity("Shop.Domain.Models.EventSocialSession", b =>
                {
                    b.HasOne("Shop.Domain.Models.SocialSession", "Session")
                        .WithMany("EventSocialSession")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK_EVENT_SOC_SESSION_LIST_ID")
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.JournalInterdepartServSocia", b =>
                {
                    b.HasOne("Shop.Domain.Models.JournalInterdepartSocial", "IdJiRestNavigation")
                        .WithMany("JournalInterdepartServSocia")
                        .HasForeignKey("IdJiRest")
                        .HasConstraintName("FK_JI_SERVICE_SOC_JOURNAL_ID")
                        .IsRequired();

                    b.HasOne("Shop.Domain.Models.ServisesSocial", "IdServiceNavigation")
                        .WithMany("JournalInterdepartServSocia")
                        .HasForeignKey("IdService")
                        .HasConstraintName("FK_JI_SERVICE_SOC_SERVICE_ID")
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialDoc", b =>
                {
                    b.HasOne("Shop.Domain.Models.PersonsSocial", "Person")
                        .WithMany("PersonsSocialDoc")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_PERSONS_SOC_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialDocFile", b =>
                {
                    b.HasOne("Shop.Domain.Models.PersonsSocialDoc", "IdPersonsDocNavigation")
                        .WithMany("PersonsSocialDocFile")
                        .HasForeignKey("IdPersonsDoc")
                        .HasConstraintName("FK_PERSONS_SOC_DOC_FILE_PD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialLegalRepresent", b =>
                {
                    b.HasOne("Shop.Domain.Models.PersonsSocial", "IdLegalRepresentNavigation")
                        .WithMany("PersonsSocialLegalRepresentIdLegalRepresentNavigation")
                        .HasForeignKey("IdLegalRepresent")
                        .HasConstraintName("FK_PERSON_SOC_LEGAL_REPRESENT1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Domain.Models.PersonsSocial", "IdPersonNavigation")
                        .WithMany("PersonsSocialLegalRepresentIdPersonNavigation")
                        .HasForeignKey("IdPerson")
                        .HasConstraintName("FK_PERSON_SOC_LEGAL_REPRESENT2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.PersonsSocialRepresent", b =>
                {
                    b.HasOne("Shop.Domain.Models.PersonsSocial", "IdPersonNavigation")
                        .WithMany("PersonsSocialRepresentIdPersonNavigation")
                        .HasForeignKey("IdPerson")
                        .HasConstraintName("FK_PERSON_SOC_REPRESENT2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Domain.Models.PersonsSocial", "IdRepresentNavigation")
                        .WithMany("PersonsSocialRepresentIdRepresentNavigation")
                        .HasForeignKey("IdRepresent")
                        .HasConstraintName("FK_PERSON_SOC_REPRESENT1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocial", b =>
                {
                    b.HasOne("Shop.Domain.Models.PersonsSocial", "IdCurrLegalRepresentNavigation")
                        .WithMany("ServisesSocialIdCurrLegalRepresentNavigation")
                        .HasForeignKey("IdCurrLegalRepresent")
                        .HasConstraintName("FK_SERVISES_INV_LEG_REPR_ID");

                    b.HasOne("Shop.Domain.Models.PersonsSocial", "IdCurrRepresentNavigation")
                        .WithMany("ServisesSocialIdCurrRepresentNavigation")
                        .HasForeignKey("IdCurrRepresent")
                        .HasConstraintName("FK_SERVISES_INV_REPR_ID");

                    b.HasOne("Shop.Domain.Models.ServisesSocialHistorys", "IdServiceHistorysNavigation")
                        .WithMany("ServisesSocial")
                        .HasForeignKey("IdServiceHistorys")
                        .HasConstraintName("FK_SERVISES_INV_HISTORY_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Shop.Domain.Models.PersonsSocial", "Person")
                        .WithMany("ServisesSocialPerson")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_SERVISES_INV_PERSON_ID");

                    b.HasOne("Shop.Domain.Models.SocialSession", "Session")
                        .WithMany("ServisesSocial")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK_SERVISES_INV_SESSION_ID");
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialDoc", b =>
                {
                    b.HasOne("Shop.Domain.Models.ServisesSocial", "Servises")
                        .WithMany("ServisesSocialDoc")
                        .HasForeignKey("ServisesId")
                        .HasConstraintName("FK_SERVISE_INV_DOC_SERVISES_ID")
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialFamilyCat", b =>
                {
                    b.HasOne("Shop.Domain.Models.ServisesSocial", "ServisesSocial")
                        .WithMany("ServisesSocialFamilyCat")
                        .HasForeignKey("ServisesSocialId")
                        .HasConstraintName("FK_SERVISES_SOC_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialHistorys", b =>
                {
                    b.HasOne("Shop.Domain.Models.ServisesSocial", "Servises")
                        .WithMany("ServisesSocialHistorys")
                        .HasForeignKey("ServisesId")
                        .HasConstraintName("FK_SERV_SOC_HIST_SERVISES_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.ServisesSocialPersonDoc", b =>
                {
                    b.HasOne("Shop.Domain.Models.ServisesSocial", "Servises")
                        .WithMany("ServisesSocialPersonDoc")
                        .HasForeignKey("ServisesId")
                        .HasConstraintName("FK_SERV_SOC_PERS_DOC_SERVISE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialDelivery", b =>
                {
                    b.HasOne("Shop.Domain.Models.SocialSession", "SocialSession")
                        .WithMany("SocialDelivery")
                        .HasForeignKey("SocialSessionId")
                        .HasConstraintName("FK_SOC_DELIVERY_SESSION_ID");
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialPlace", b =>
                {
                    b.HasOne("Shop.Domain.Models.SocialWay", "SocialWay")
                        .WithMany("SocialPlace")
                        .HasForeignKey("SocialWayId")
                        .HasConstraintName("FK_SOC_PLACE_WAY_ID")
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialSession", b =>
                {
                    b.HasOne("Shop.Domain.Models.EventSocialSession", "IdEventSessionNavigation")
                        .WithMany("SocialSession")
                        .HasForeignKey("IdEventSession")
                        .HasConstraintName("FK_SOC_SESSION_EVENT_ID");

                    b.HasOne("Shop.Domain.Models.SocialPlace", "SocialPlace")
                        .WithMany("SocialSession")
                        .HasForeignKey("SocialPlaceId")
                        .HasConstraintName("FK_SOC_SESSION_PLACE_ID")
                        .IsRequired();
                });

            modelBuilder.Entity("Shop.Domain.Models.SocialWay", b =>
                {
                    b.HasOne("Shop.Domain.Models.SocialPeriod", "SocialPeriod")
                        .WithMany("SocialWay")
                        .HasForeignKey("SocialPeriodId")
                        .HasConstraintName("FK_SOC_WAY_PERIOD_ID")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
